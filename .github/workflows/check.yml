name: Check

on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened, edited]

  push:
    branches:
      - main

jobs:
  Check:
    runs-on: windows-latest
    if: contains(github.event.pull_request.body, 'The workflow check was intentionally skipped.') == false
    steps:
      - uses: actions/checkout@master

      - name: Display repository name
        env:
          REPOSITORY: ${{ github.repository }}
        run: |
          Write-Host "The repository is: ${env:REPOSITORY}"

      - name: Install .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.100'

      - name: Install tools
        working-directory: src
        run: dotnet tool restore

      - name: Install coveralls.net (to send test coverage)
        working-directory: src
        if: github.repository == 'mristin/opinionated-usings-csharp'
        run: dotnet tool install coveralls.net --version 2.0.0-beta0002

      - name: Check
        working-directory: src
        run: powershell .\Check.ps1

      - name: Send to Coveralls
        working-directory: src
        env:
          HEAD_REF: ${{ github.head_ref }}
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        run: |
          # At the moment we only run coveralls on main.
          # However, we leave this legacy logic here in case we introduce
          # new branching policy or new coverage publishing rules.
          if (${env:GITHUB_REF}.StartsWith("refs/pull/"))
          {
            $branch = ${env:HEAD_REF} -Replace 'refs/heads/', ''
          }
          else
          {
            $branch = ${env:GITHUB_REF} -Replace 'refs/heads/', ''
          }

          $commit = $env:GITHUB_SHA

          echo "Branch is: $branch"
          echo "Commit is: $commit"

          # TODO: this needs to be fixed
          dotnet tool run csmacnz.Coveralls --opencover -i ..\artefacts\CoverageResults.xml --useRelativePaths --repoToken $env:COVERALLS_REPO_TOKEN --commitId $commit --commitBranch $branch
